*.production_settings
**/static/uploads/*
**/static/recent/*
**/uploads/*
**/jmeter/*
!**/jmeter/*.jmx
!**/jmeter/*.csv
!/bin/log4j2.xml

############# AUTO GENERATED #############

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

######################## jmeter ignore files
# Directory trees to ignore
/backups/
/build/
/buildSrc/build/
/buildSrc/subprojects/*/build/
/buildSrc/subprojects/*/bin/
/buildSrc/subprojects/*/out/
/src/build/
/src/bin/
/src/out/
/src/*/build/
/src/*/bin/
/src/*/out/
/src/protocol/*/build/
/src/protocol/*/bin/
/src/protocol/*/out/
/dist/
/docs/
/local/
/printable_docs/
/reports/
/site/
/target/

!/bin/report-template/**/dist
/bin/temp/
/bin/testfiles/testReport*

# Ignore Gradle project-specific cache directory
.gradle

# macOS
.DS_Store

# specific files to ignore
*.log
.ant-targets-build.xml
.checkstyle
.classpath
.externalToolBuilders
.fbwarnings
.fbprefs
.pmd
.project
.settings

# bin/ folder is used to launch JMeter, so we ignore certain files there
/bin/ApacheJMeter.jar
# Below are the results of "batch test" execution
/bin/*.csv
/bin/*.jmx
/bin/*.jtl
/bin/*.xml
# We need log4j2.xml and tika-config.xml even though we want to exclude xml created by batch tests
!/bin/log4j2.xml
!/bin/tika-config.xml

build-local.properties
jmeter-fb.*

# ignore generated keystore and certs
/bin/proxyserver.jks
/bin/ApacheJMeterTemporaryRootCA.crt
/bin/ApacheJMeterTemporaryRootCA.usr

# ignore jar's in lib/
/lib/**/*.jar

# ignore default report output directory
/bin/report-output
/output/

# IDEA
/out/
.idea/*
!/.idea/icon.png
*.iml

# virtual machine crash logs, see http://www.java.com/en/download/help/error_hotspot.xml
hs_err_pid*
# other jvm related files
.attach_*
